name: Generate Go Protobuf Files

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: write

jobs:
  generate-go-proto:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Install protoc
      run: |
        sudo apt-get update
        sudo apt-get install -y protobuf-compiler

    - name: Install protoc plugins
      run: |
        go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.33.0
        go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.3.0
        go install github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-grpc-gateway@v2.17.0
        echo "$(go env GOPATH)/bin" >> $GITHUB_PATH

    - name: Download googleapis (for annotations.proto)
      run: |
        git clone --depth=1 https://github.com/googleapis/googleapis.git /tmp/googleapis
    - name: Cleanup file
      run: |
        PROTO_ROOT=protobuf
        OUT_ROOT=generated/go
        GOOGLEAPIS_DIR=/tmp/googleapis

        mkdir -p "$OUT_ROOT"

        # Step 1: Cleanup stale files
        for pkg_dir in "$OUT_ROOT"/*; do
          [ -d "$pkg_dir" ] || continue

          proto_pkg=$(basename "$pkg_dir")
          proto_src_dir="$PROTO_ROOT/$proto_pkg"

          if [ ! -d "$proto_src_dir" ]; then
                echo "üóë Removing stale package directory: $pkg_dir"
                rm -rf "$pkg_dir"
                continue
          fi

          for gen_file in "$pkg_dir"/*; do
                base=$(basename "$gen_file" | cut -d. -f1)
                if [ ! -f "$proto_src_dir/$base.proto" ]; then
                        echo "üóë Removing stale generated file: $gen_file"
                        rm -rf "$gen_file"
                fi
          done

          descriptor_dir="$pkg_dir/descriptor"
          if [ -d "$descriptor_dir" ]; then
                for pb_file in "$descriptor_dir"/*.pb; do
                        base=$(basename "$pb_file" .pb)
                        if [ ! -f "$proto_src_dir/$base.proto" ]; then
                                echo "üóë Removing stale descriptor file: $pb_file"
                                rm -rf "$pb_file"
                        fi
                done
          fi
        done
    - name: Generate Go, gRPC, Gateway, Descriptor files
      run: |
        PROTO_ROOT=protobuf
        OUT_ROOT=generated/go
        GOOGLEAPIS_DIR=/tmp/googleapis

        mkdir -p $OUT_ROOT

        dirs=$(find $PROTO_ROOT -type d -mindepth 1)
        if [ -z "$dirs" ]; then
          echo "‚ö†Ô∏è No proto subdirectories found in $PROTO_ROOT"
          exit 1
        fi
        for dir in $dirs; do
          pkg=$(basename "$dir")
          descriptor_dir="$OUT_ROOT/$pkg/descriptor"
          mkdir -p "$OUT_ROOT/$pkg"
          mkdir -p "$descriptor_dir"

          # üß† Gather all .proto files in the current package
          proto_files=$(find "$dir" -maxdepth 1 -name "*.proto")

          # üõë Skip if no proto files
          if [ -z "$proto_files" ]; then
                    echo "‚ö†Ô∏è No proto files in $dir"
                    continue
          fi

          # üëá Combine into single descriptor per package
          protoc \
                    --proto_path="$PROTO_ROOT" \
                    --proto_path="$GOOGLEAPIS_DIR" \
                    --go_out="$OUT_ROOT" --go_opt=paths=source_relative \
                    --go-grpc_out="$OUT_ROOT" --go-grpc_opt=paths=source_relative \
                    --grpc-gateway_out="$OUT_ROOT" --grpc-gateway_opt=paths=source_relative \
                    --descriptor_set_out="$descriptor_dir/${pkg}.pb" \
                    --include_imports \
                    $proto_files
        done
    - name: Update depedency go modules
      run: |
        go mod tidy
    - name: Commit generated files
      run: |
        if find generated/go -type f | grep -q .; then
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add -f generated/go/
          git commit -m "Auto-generate protobuf and descriptor files [CI]" || echo "‚ÑπÔ∏è No changes to commit"
          git push origin main
        else
          echo "‚ö†Ô∏è No generated files found ‚Äî skipping commit."
        fi
        