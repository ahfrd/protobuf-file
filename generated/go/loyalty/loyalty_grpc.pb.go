// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v3.21.12
// source: loyalty/loyalty.proto

package loyalty

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	LoyaltyService_GetListGiftsProduct_FullMethodName        = "/loyalty.LoyaltyService/GetListGiftsProduct"
	LoyaltyService_GetListGiftsProductStruct_FullMethodName  = "/loyalty.LoyaltyService/GetListGiftsProductStruct"
	LoyaltyService_GetListGiftsProductValue_FullMethodName   = "/loyalty.LoyaltyService/GetListGiftsProductValue"
	LoyaltyService_GetGiftsDetail_FullMethodName             = "/loyalty.LoyaltyService/GetGiftsDetail"
	LoyaltyService_CreateProduct_FullMethodName              = "/loyalty.LoyaltyService/CreateProduct"
	LoyaltyService_StreamClientProduct_FullMethodName        = "/loyalty.LoyaltyService/StreamClientProduct"
	LoyaltyService_StreamServerProduct_FullMethodName        = "/loyalty.LoyaltyService/StreamServerProduct"
	LoyaltyService_BiderectionalStreamProduct_FullMethodName = "/loyalty.LoyaltyService/BiderectionalStreamProduct"
	LoyaltyService_SayHello_FullMethodName                   = "/loyalty.LoyaltyService/SayHello"
	LoyaltyService_SayHellox_FullMethodName                  = "/loyalty.LoyaltyService/SayHellox"
)

// LoyaltyServiceClient is the client API for LoyaltyService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type LoyaltyServiceClient interface {
	GetListGiftsProduct(ctx context.Context, in *GetListGiftsProductRequest, opts ...grpc.CallOption) (*GetListGiftsResponse, error)
	GetListGiftsProductStruct(ctx context.Context, in *GetGiftsProductDetailRequest, opts ...grpc.CallOption) (*GetListGiftsStructResponse, error)
	GetListGiftsProductValue(ctx context.Context, in *GetGiftsProductDetailRequest, opts ...grpc.CallOption) (*GetListGiftsValueResponse, error)
	GetGiftsDetail(ctx context.Context, in *GetGiftsProductDetailRequest, opts ...grpc.CallOption) (*GetListGiftsDetailResponse, error)
	CreateProduct(ctx context.Context, in *CreateProductRequest, opts ...grpc.CallOption) (*CreateProductResponse, error)
	StreamClientProduct(ctx context.Context, opts ...grpc.CallOption) (LoyaltyService_StreamClientProductClient, error)
	StreamServerProduct(ctx context.Context, in *ProductDetailEntity, opts ...grpc.CallOption) (LoyaltyService_StreamServerProductClient, error)
	BiderectionalStreamProduct(ctx context.Context, opts ...grpc.CallOption) (LoyaltyService_BiderectionalStreamProductClient, error)
	SayHello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloReply, error)
	SayHellox(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloReply, error)
}

type loyaltyServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewLoyaltyServiceClient(cc grpc.ClientConnInterface) LoyaltyServiceClient {
	return &loyaltyServiceClient{cc}
}

func (c *loyaltyServiceClient) GetListGiftsProduct(ctx context.Context, in *GetListGiftsProductRequest, opts ...grpc.CallOption) (*GetListGiftsResponse, error) {
	out := new(GetListGiftsResponse)
	err := c.cc.Invoke(ctx, LoyaltyService_GetListGiftsProduct_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *loyaltyServiceClient) GetListGiftsProductStruct(ctx context.Context, in *GetGiftsProductDetailRequest, opts ...grpc.CallOption) (*GetListGiftsStructResponse, error) {
	out := new(GetListGiftsStructResponse)
	err := c.cc.Invoke(ctx, LoyaltyService_GetListGiftsProductStruct_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *loyaltyServiceClient) GetListGiftsProductValue(ctx context.Context, in *GetGiftsProductDetailRequest, opts ...grpc.CallOption) (*GetListGiftsValueResponse, error) {
	out := new(GetListGiftsValueResponse)
	err := c.cc.Invoke(ctx, LoyaltyService_GetListGiftsProductValue_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *loyaltyServiceClient) GetGiftsDetail(ctx context.Context, in *GetGiftsProductDetailRequest, opts ...grpc.CallOption) (*GetListGiftsDetailResponse, error) {
	out := new(GetListGiftsDetailResponse)
	err := c.cc.Invoke(ctx, LoyaltyService_GetGiftsDetail_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *loyaltyServiceClient) CreateProduct(ctx context.Context, in *CreateProductRequest, opts ...grpc.CallOption) (*CreateProductResponse, error) {
	out := new(CreateProductResponse)
	err := c.cc.Invoke(ctx, LoyaltyService_CreateProduct_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *loyaltyServiceClient) StreamClientProduct(ctx context.Context, opts ...grpc.CallOption) (LoyaltyService_StreamClientProductClient, error) {
	stream, err := c.cc.NewStream(ctx, &LoyaltyService_ServiceDesc.Streams[0], LoyaltyService_StreamClientProduct_FullMethodName, opts...)
	if err != nil {
		return nil, err
	}
	x := &loyaltyServiceStreamClientProductClient{stream}
	return x, nil
}

type LoyaltyService_StreamClientProductClient interface {
	Send(*ProductDetailEntity) error
	CloseAndRecv() (*GetListGiftsDetailResponse, error)
	grpc.ClientStream
}

type loyaltyServiceStreamClientProductClient struct {
	grpc.ClientStream
}

func (x *loyaltyServiceStreamClientProductClient) Send(m *ProductDetailEntity) error {
	return x.ClientStream.SendMsg(m)
}

func (x *loyaltyServiceStreamClientProductClient) CloseAndRecv() (*GetListGiftsDetailResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(GetListGiftsDetailResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *loyaltyServiceClient) StreamServerProduct(ctx context.Context, in *ProductDetailEntity, opts ...grpc.CallOption) (LoyaltyService_StreamServerProductClient, error) {
	stream, err := c.cc.NewStream(ctx, &LoyaltyService_ServiceDesc.Streams[1], LoyaltyService_StreamServerProduct_FullMethodName, opts...)
	if err != nil {
		return nil, err
	}
	x := &loyaltyServiceStreamServerProductClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type LoyaltyService_StreamServerProductClient interface {
	Recv() (*GetListGiftsDetailResponse, error)
	grpc.ClientStream
}

type loyaltyServiceStreamServerProductClient struct {
	grpc.ClientStream
}

func (x *loyaltyServiceStreamServerProductClient) Recv() (*GetListGiftsDetailResponse, error) {
	m := new(GetListGiftsDetailResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *loyaltyServiceClient) BiderectionalStreamProduct(ctx context.Context, opts ...grpc.CallOption) (LoyaltyService_BiderectionalStreamProductClient, error) {
	stream, err := c.cc.NewStream(ctx, &LoyaltyService_ServiceDesc.Streams[2], LoyaltyService_BiderectionalStreamProduct_FullMethodName, opts...)
	if err != nil {
		return nil, err
	}
	x := &loyaltyServiceBiderectionalStreamProductClient{stream}
	return x, nil
}

type LoyaltyService_BiderectionalStreamProductClient interface {
	Send(*ProductDetailEntity) error
	Recv() (*GetListGiftsDetailResponse, error)
	grpc.ClientStream
}

type loyaltyServiceBiderectionalStreamProductClient struct {
	grpc.ClientStream
}

func (x *loyaltyServiceBiderectionalStreamProductClient) Send(m *ProductDetailEntity) error {
	return x.ClientStream.SendMsg(m)
}

func (x *loyaltyServiceBiderectionalStreamProductClient) Recv() (*GetListGiftsDetailResponse, error) {
	m := new(GetListGiftsDetailResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *loyaltyServiceClient) SayHello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloReply, error) {
	out := new(HelloReply)
	err := c.cc.Invoke(ctx, LoyaltyService_SayHello_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *loyaltyServiceClient) SayHellox(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloReply, error) {
	out := new(HelloReply)
	err := c.cc.Invoke(ctx, LoyaltyService_SayHellox_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LoyaltyServiceServer is the server API for LoyaltyService service.
// All implementations must embed UnimplementedLoyaltyServiceServer
// for forward compatibility
type LoyaltyServiceServer interface {
	GetListGiftsProduct(context.Context, *GetListGiftsProductRequest) (*GetListGiftsResponse, error)
	GetListGiftsProductStruct(context.Context, *GetGiftsProductDetailRequest) (*GetListGiftsStructResponse, error)
	GetListGiftsProductValue(context.Context, *GetGiftsProductDetailRequest) (*GetListGiftsValueResponse, error)
	GetGiftsDetail(context.Context, *GetGiftsProductDetailRequest) (*GetListGiftsDetailResponse, error)
	CreateProduct(context.Context, *CreateProductRequest) (*CreateProductResponse, error)
	StreamClientProduct(LoyaltyService_StreamClientProductServer) error
	StreamServerProduct(*ProductDetailEntity, LoyaltyService_StreamServerProductServer) error
	BiderectionalStreamProduct(LoyaltyService_BiderectionalStreamProductServer) error
	SayHello(context.Context, *HelloRequest) (*HelloReply, error)
	SayHellox(context.Context, *HelloRequest) (*HelloReply, error)
	mustEmbedUnimplementedLoyaltyServiceServer()
}

// UnimplementedLoyaltyServiceServer must be embedded to have forward compatible implementations.
type UnimplementedLoyaltyServiceServer struct {
}

func (UnimplementedLoyaltyServiceServer) GetListGiftsProduct(context.Context, *GetListGiftsProductRequest) (*GetListGiftsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetListGiftsProduct not implemented")
}
func (UnimplementedLoyaltyServiceServer) GetListGiftsProductStruct(context.Context, *GetGiftsProductDetailRequest) (*GetListGiftsStructResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetListGiftsProductStruct not implemented")
}
func (UnimplementedLoyaltyServiceServer) GetListGiftsProductValue(context.Context, *GetGiftsProductDetailRequest) (*GetListGiftsValueResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetListGiftsProductValue not implemented")
}
func (UnimplementedLoyaltyServiceServer) GetGiftsDetail(context.Context, *GetGiftsProductDetailRequest) (*GetListGiftsDetailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGiftsDetail not implemented")
}
func (UnimplementedLoyaltyServiceServer) CreateProduct(context.Context, *CreateProductRequest) (*CreateProductResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateProduct not implemented")
}
func (UnimplementedLoyaltyServiceServer) StreamClientProduct(LoyaltyService_StreamClientProductServer) error {
	return status.Errorf(codes.Unimplemented, "method StreamClientProduct not implemented")
}
func (UnimplementedLoyaltyServiceServer) StreamServerProduct(*ProductDetailEntity, LoyaltyService_StreamServerProductServer) error {
	return status.Errorf(codes.Unimplemented, "method StreamServerProduct not implemented")
}
func (UnimplementedLoyaltyServiceServer) BiderectionalStreamProduct(LoyaltyService_BiderectionalStreamProductServer) error {
	return status.Errorf(codes.Unimplemented, "method BiderectionalStreamProduct not implemented")
}
func (UnimplementedLoyaltyServiceServer) SayHello(context.Context, *HelloRequest) (*HelloReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SayHello not implemented")
}
func (UnimplementedLoyaltyServiceServer) SayHellox(context.Context, *HelloRequest) (*HelloReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SayHellox not implemented")
}
func (UnimplementedLoyaltyServiceServer) mustEmbedUnimplementedLoyaltyServiceServer() {}

// UnsafeLoyaltyServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to LoyaltyServiceServer will
// result in compilation errors.
type UnsafeLoyaltyServiceServer interface {
	mustEmbedUnimplementedLoyaltyServiceServer()
}

func RegisterLoyaltyServiceServer(s grpc.ServiceRegistrar, srv LoyaltyServiceServer) {
	s.RegisterService(&LoyaltyService_ServiceDesc, srv)
}

func _LoyaltyService_GetListGiftsProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetListGiftsProductRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoyaltyServiceServer).GetListGiftsProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: LoyaltyService_GetListGiftsProduct_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoyaltyServiceServer).GetListGiftsProduct(ctx, req.(*GetListGiftsProductRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LoyaltyService_GetListGiftsProductStruct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGiftsProductDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoyaltyServiceServer).GetListGiftsProductStruct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: LoyaltyService_GetListGiftsProductStruct_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoyaltyServiceServer).GetListGiftsProductStruct(ctx, req.(*GetGiftsProductDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LoyaltyService_GetListGiftsProductValue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGiftsProductDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoyaltyServiceServer).GetListGiftsProductValue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: LoyaltyService_GetListGiftsProductValue_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoyaltyServiceServer).GetListGiftsProductValue(ctx, req.(*GetGiftsProductDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LoyaltyService_GetGiftsDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGiftsProductDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoyaltyServiceServer).GetGiftsDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: LoyaltyService_GetGiftsDetail_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoyaltyServiceServer).GetGiftsDetail(ctx, req.(*GetGiftsProductDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LoyaltyService_CreateProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateProductRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoyaltyServiceServer).CreateProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: LoyaltyService_CreateProduct_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoyaltyServiceServer).CreateProduct(ctx, req.(*CreateProductRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LoyaltyService_StreamClientProduct_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(LoyaltyServiceServer).StreamClientProduct(&loyaltyServiceStreamClientProductServer{stream})
}

type LoyaltyService_StreamClientProductServer interface {
	SendAndClose(*GetListGiftsDetailResponse) error
	Recv() (*ProductDetailEntity, error)
	grpc.ServerStream
}

type loyaltyServiceStreamClientProductServer struct {
	grpc.ServerStream
}

func (x *loyaltyServiceStreamClientProductServer) SendAndClose(m *GetListGiftsDetailResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *loyaltyServiceStreamClientProductServer) Recv() (*ProductDetailEntity, error) {
	m := new(ProductDetailEntity)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _LoyaltyService_StreamServerProduct_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ProductDetailEntity)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(LoyaltyServiceServer).StreamServerProduct(m, &loyaltyServiceStreamServerProductServer{stream})
}

type LoyaltyService_StreamServerProductServer interface {
	Send(*GetListGiftsDetailResponse) error
	grpc.ServerStream
}

type loyaltyServiceStreamServerProductServer struct {
	grpc.ServerStream
}

func (x *loyaltyServiceStreamServerProductServer) Send(m *GetListGiftsDetailResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _LoyaltyService_BiderectionalStreamProduct_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(LoyaltyServiceServer).BiderectionalStreamProduct(&loyaltyServiceBiderectionalStreamProductServer{stream})
}

type LoyaltyService_BiderectionalStreamProductServer interface {
	Send(*GetListGiftsDetailResponse) error
	Recv() (*ProductDetailEntity, error)
	grpc.ServerStream
}

type loyaltyServiceBiderectionalStreamProductServer struct {
	grpc.ServerStream
}

func (x *loyaltyServiceBiderectionalStreamProductServer) Send(m *GetListGiftsDetailResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *loyaltyServiceBiderectionalStreamProductServer) Recv() (*ProductDetailEntity, error) {
	m := new(ProductDetailEntity)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _LoyaltyService_SayHello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HelloRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoyaltyServiceServer).SayHello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: LoyaltyService_SayHello_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoyaltyServiceServer).SayHello(ctx, req.(*HelloRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LoyaltyService_SayHellox_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HelloRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoyaltyServiceServer).SayHellox(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: LoyaltyService_SayHellox_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoyaltyServiceServer).SayHellox(ctx, req.(*HelloRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// LoyaltyService_ServiceDesc is the grpc.ServiceDesc for LoyaltyService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var LoyaltyService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "loyalty.LoyaltyService",
	HandlerType: (*LoyaltyServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetListGiftsProduct",
			Handler:    _LoyaltyService_GetListGiftsProduct_Handler,
		},
		{
			MethodName: "GetListGiftsProductStruct",
			Handler:    _LoyaltyService_GetListGiftsProductStruct_Handler,
		},
		{
			MethodName: "GetListGiftsProductValue",
			Handler:    _LoyaltyService_GetListGiftsProductValue_Handler,
		},
		{
			MethodName: "GetGiftsDetail",
			Handler:    _LoyaltyService_GetGiftsDetail_Handler,
		},
		{
			MethodName: "CreateProduct",
			Handler:    _LoyaltyService_CreateProduct_Handler,
		},
		{
			MethodName: "SayHello",
			Handler:    _LoyaltyService_SayHello_Handler,
		},
		{
			MethodName: "SayHellox",
			Handler:    _LoyaltyService_SayHellox_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "StreamClientProduct",
			Handler:       _LoyaltyService_StreamClientProduct_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "StreamServerProduct",
			Handler:       _LoyaltyService_StreamServerProduct_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "BiderectionalStreamProduct",
			Handler:       _LoyaltyService_BiderectionalStreamProduct_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "loyalty/loyalty.proto",
}
